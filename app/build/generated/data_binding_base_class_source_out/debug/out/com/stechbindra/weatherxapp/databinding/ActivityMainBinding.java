// Generated by view binder compiler. Do not edit!
package com.stechbindra.weatherxapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.helper.widget.Flow;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.stechbindra.weatherxapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cityName;

  @NonNull
  public final TextView condition;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView day;

  @NonNull
  public final Flow flow;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final TextView humidity;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final LottieAnimationView lottieAnimationView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView maxTemp;

  @NonNull
  public final TextView minTemp;

  @NonNull
  public final TextView sea;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final TextView sunRise;

  @NonNull
  public final TextView sunset;

  @NonNull
  public final TextView temp;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView weather;

  @NonNull
  public final TextView windSpeed;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView cityName,
      @NonNull TextView condition, @NonNull TextView date, @NonNull TextView day,
      @NonNull Flow flow, @NonNull FrameLayout frameLayout, @NonNull TextView humidity,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout linearLayout3, @NonNull LinearLayout linearLayout4,
      @NonNull LinearLayout linearLayout5, @NonNull LinearLayout linearLayout6,
      @NonNull LottieAnimationView lottieAnimationView, @NonNull ConstraintLayout main,
      @NonNull TextView maxTemp, @NonNull TextView minTemp, @NonNull TextView sea,
      @NonNull SearchView searchView, @NonNull TextView sunRise, @NonNull TextView sunset,
      @NonNull TextView temp, @NonNull TextView textView2, @NonNull TextView textView9,
      @NonNull TextView weather, @NonNull TextView windSpeed) {
    this.rootView = rootView;
    this.cityName = cityName;
    this.condition = condition;
    this.date = date;
    this.day = day;
    this.flow = flow;
    this.frameLayout = frameLayout;
    this.humidity = humidity;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.linearLayout6 = linearLayout6;
    this.lottieAnimationView = lottieAnimationView;
    this.main = main;
    this.maxTemp = maxTemp;
    this.minTemp = minTemp;
    this.sea = sea;
    this.searchView = searchView;
    this.sunRise = sunRise;
    this.sunset = sunset;
    this.temp = temp;
    this.textView2 = textView2;
    this.textView9 = textView9;
    this.weather = weather;
    this.windSpeed = windSpeed;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cityName;
      TextView cityName = ViewBindings.findChildViewById(rootView, id);
      if (cityName == null) {
        break missingId;
      }

      id = R.id.condition;
      TextView condition = ViewBindings.findChildViewById(rootView, id);
      if (condition == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.day;
      TextView day = ViewBindings.findChildViewById(rootView, id);
      if (day == null) {
        break missingId;
      }

      id = R.id.flow;
      Flow flow = ViewBindings.findChildViewById(rootView, id);
      if (flow == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.humidity;
      TextView humidity = ViewBindings.findChildViewById(rootView, id);
      if (humidity == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.lottieAnimationView;
      LottieAnimationView lottieAnimationView = ViewBindings.findChildViewById(rootView, id);
      if (lottieAnimationView == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.max_temp;
      TextView maxTemp = ViewBindings.findChildViewById(rootView, id);
      if (maxTemp == null) {
        break missingId;
      }

      id = R.id.min_temp;
      TextView minTemp = ViewBindings.findChildViewById(rootView, id);
      if (minTemp == null) {
        break missingId;
      }

      id = R.id.sea;
      TextView sea = ViewBindings.findChildViewById(rootView, id);
      if (sea == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.sunRise;
      TextView sunRise = ViewBindings.findChildViewById(rootView, id);
      if (sunRise == null) {
        break missingId;
      }

      id = R.id.sunset;
      TextView sunset = ViewBindings.findChildViewById(rootView, id);
      if (sunset == null) {
        break missingId;
      }

      id = R.id.temp;
      TextView temp = ViewBindings.findChildViewById(rootView, id);
      if (temp == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.weather;
      TextView weather = ViewBindings.findChildViewById(rootView, id);
      if (weather == null) {
        break missingId;
      }

      id = R.id.windSpeed;
      TextView windSpeed = ViewBindings.findChildViewById(rootView, id);
      if (windSpeed == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, cityName, condition, date, day,
          flow, frameLayout, humidity, linearLayout, linearLayout2, linearLayout3, linearLayout4,
          linearLayout5, linearLayout6, lottieAnimationView, main, maxTemp, minTemp, sea,
          searchView, sunRise, sunset, temp, textView2, textView9, weather, windSpeed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
